//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Speech {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionStringTable {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionStringTable() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Speech.ExceptionStringTable", typeof(ExceptionStringTable).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The word, pronunciation, or POS pair being added is already in lexicon. ähnelt.
        /// </summary>
        internal static string AlreadyInLex {
            get {
                return ResourceManager.GetString("AlreadyInLex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;OnInit&apos; arguments have type mismatch. ähnelt.
        /// </summary>
        internal static string ArgumentMismatch {
            get {
                return ResourceManager.GetString("ArgumentMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Array cannot contain null value. ähnelt.
        /// </summary>
        internal static string ArrayOfNullIllegal {
            get {
                return ResourceManager.GetString("ArrayOfNullIllegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation was successful, but only with automatic stream format conversion. ähnelt.
        /// </summary>
        internal static string AudioConversionEnabled {
            get {
                return ResourceManager.GetString("AudioConversionEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio device error encountered. ähnelt.
        /// </summary>
        internal static string AudioDeviceError {
            get {
                return ResourceManager.GetString("AudioDeviceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio format is not supported. ähnelt.
        /// </summary>
        internal static string AudioDeviceFormatError {
            get {
                return ResourceManager.GetString("AudioDeviceFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal error occurred in the recognition process. ähnelt.
        /// </summary>
        internal static string AudioDeviceInternalError {
            get {
                return ResourceManager.GetString("AudioDeviceInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reads on paused streams will not block, and this return code indicates that all of the data has been removed from the stream. ähnelt.
        /// </summary>
        internal static string AudioPaused {
            get {
                return ResourceManager.GetString("AudioPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BitsPerSample field not valid. ähnelt.
        /// </summary>
        internal static string BitsPerSampleInvalid {
            get {
                return ResourceManager.GetString("BitsPerSampleInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Metadata block signature not valid. ähnelt.
        /// </summary>
        internal static string BlockSignatureInvalid {
            get {
                return ResourceManager.GetString("BlockSignatureInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; class name not found in namespace &apos;{1}&apos;. Verify that the class is marked public. ähnelt.
        /// </summary>
        internal static string CannotFindClass {
            get {
                return ResourceManager.GetString("CannotFindClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot load semantic interpretation script. ähnelt.
        /// </summary>
        internal static string CannotLoadDotNetSemanticCode {
            get {
                return ResourceManager.GetString("CannotLoadDotNetSemanticCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot load the required resource &apos;{0}&apos; from the manifest of assembly &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string CannotLoadResourceFromManifest {
            get {
                return ResourceManager.GetString("CannotLoadResourceFromManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; file name cannot point to a directory. ähnelt.
        /// </summary>
        internal static string CannotReadFromDirectory {
            get {
                return ResourceManager.GetString("CannotReadFromDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot Set Priority On DictationGrammar objects. ähnelt.
        /// </summary>
        internal static string CannotSetPriorityOnDictation {
            get {
                return ResourceManager.GetString("CannotSetPriorityOnDictation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot use AudioFormatTag.Custom with this constructor. ähnelt.
        /// </summary>
        internal static string CannotUseCustomFormat {
            get {
                return ResourceManager.GetString("CannotUseCustomFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find a matching constructor in grammar &apos;{0}&apos; for rule &apos;{1}.
        ///Possible constructors are: &apos;{2}&apos;. ähnelt.
        /// </summary>
        internal static string CantFindAConstructor {
            get {
                return ResourceManager.GetString("CantFindAConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; property not supported for recognition results built from a serialized stream. ähnelt.
        /// </summary>
        internal static string CantGetPropertyFromSerializedInfo {
            get {
                return ResourceManager.GetString("CantGetPropertyFromSerializedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Circular rule reference in rule &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string CircularRuleRef {
            get {
                return ResourceManager.GetString("CircularRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; class must be &apos;public&apos;. The grammar cannot be instantiated. ähnelt.
        /// </summary>
        internal static string ClassNotPublic {
            get {
                return ResourceManager.GetString("ClassNotPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Collection is read-only. ähnelt.
        /// </summary>
        internal static string CollectionReadOnly {
            get {
                return ResourceManager.GetString("CollectionReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method name cannot be the same as name of rule &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string ConstructorNotAllowed {
            get {
                return ResourceManager.GetString("ConstructorNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Audio header info. Cannot calculate data block size because blockAlign or metadata size not valid. ähnelt.
        /// </summary>
        internal static string DataBlockSizeInvalid {
            get {
                return ResourceManager.GetString("DataBlockSizeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter must be of the form grammar:dictation#topic. ähnelt.
        /// </summary>
        internal static string DictationInvalidTopic {
            get {
                return ResourceManager.GetString("DictationInvalidTopic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; dictation topic not found. ähnelt.
        /// </summary>
        internal static string DictationTopicNotFound {
            get {
                return ResourceManager.GetString("DictationTopicNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated entry. ähnelt.
        /// </summary>
        internal static string DuplicatedEntry {
            get {
                return ResourceManager.GetString("DuplicatedEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate rule name. ähnelt.
        /// </summary>
        internal static string DuplicatedRuleName {
            get {
                return ResourceManager.GetString("DuplicatedRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated semantic key &apos;{0}&apos; in rule &apos;{1}. ähnelt.
        /// </summary>
        internal static string DupSemanticKey {
            get {
                return ResourceManager.GetString("DupSemanticKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The semantic value in rule &apos;{0}&apos; was already set and cannot be changed. ähnelt.
        /// </summary>
        internal static string DupSemanticValue {
            get {
                return ResourceManager.GetString("DupSemanticValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The dynamic rule &apos;{0}&apos; is undefined. The rule must be created in &apos;OnInit&apos; method. ähnelt.
        /// </summary>
        internal static string DynamicRuleNotFound {
            get {
                return ResourceManager.GetString("DynamicRuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to load embedded class library &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string EmbeddedClassLibraryFailed {
            get {
                return ResourceManager.GetString("EmbeddedClassLibraryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Display&apos; string cannot be empty. ähnelt.
        /// </summary>
        internal static string EmptyDisplayString {
            get {
                return ResourceManager.GetString("EmptyDisplayString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;one-of&apos; must contain at least one &apos;item&apos; element. ähnelt.
        /// </summary>
        internal static string EmptyOneOf {
            get {
                return ResourceManager.GetString("EmptyOneOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;pron&apos; string cannot be empty. ähnelt.
        /// </summary>
        internal static string EmptyPronunciationString {
            get {
                return ResourceManager.GetString("EmptyPronunciationString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty rule is not allowed. ähnelt.
        /// </summary>
        internal static string EmptyRule {
            get {
                return ResourceManager.GetString("EmptyRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property cannot be negative or greater than 100 seconds. ähnelt.
        /// </summary>
        internal static string EndSilenceOutOfRange {
            get {
                return ResourceManager.GetString("EndSilenceOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; enumeration value is not valid. ähnelt.
        /// </summary>
        internal static string EnumInvalid {
            get {
                return ResourceManager.GetString("EnumInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dynamic rule cannot be root or public. ähnelt.
        /// </summary>
        internal static string ExportDynamicRule {
            get {
                return ResourceManager.GetString("ExportDynamicRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extra wave header data not present. ähnelt.
        /// </summary>
        internal static string ExtraDataNotPresent {
            get {
                return ResourceManager.GetString("ExtraDataNotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; file not found. ähnelt.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot load grammar that is already loaded. ähnelt.
        /// </summary>
        internal static string GrammarAlreadyLoaded {
            get {
                return ResourceManager.GetString("GrammarAlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ähnelt.
        /// </summary>
        internal static string GrammarCompilerError {
            get {
                return ResourceManager.GetString("GrammarCompilerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRGS source not valid. Cannot have multiple &apos;grammar&apos; elements. ähnelt.
        /// </summary>
        internal static string GrammarDefTwice {
            get {
                return ResourceManager.GetString("GrammarDefTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority must be between -128 and 127. ähnelt.
        /// </summary>
        internal static string GrammarInvalidPriority {
            get {
                return ResourceManager.GetString("GrammarInvalidPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight must be between 0.0 and 1.0. ähnelt.
        /// </summary>
        internal static string GrammarInvalidWeight {
            get {
                return ResourceManager.GetString("GrammarInvalidWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar loading failed. ähnelt.
        /// </summary>
        internal static string GrammarLoadFailed {
            get {
                return ResourceManager.GetString("GrammarLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar is being loaded into the recognizer. ähnelt.
        /// </summary>
        internal static string GrammarLoadingInProgress {
            get {
                return ResourceManager.GetString("GrammarLoadingInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar is not loaded into this recognizer. ähnelt.
        /// </summary>
        internal static string GrammarNotLoaded {
            get {
                return ResourceManager.GetString("GrammarNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar is not loaded into this Recognizer. ähnelt.
        /// </summary>
        internal static string GrammarWrongRecognizer {
            get {
                return ResourceManager.GetString("GrammarWrongRecognizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must use same Debug settings on all grammars. ähnelt.
        /// </summary>
        internal static string IncompatibleDebugProperties {
            get {
                return ResourceManager.GetString("IncompatibleDebugProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must use same .NET language on all grammars. ähnelt.
        /// </summary>
        internal static string IncompatibleLanguageProperties {
            get {
                return ResourceManager.GetString("IncompatibleLanguageProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must use same namespace on all grammars. ähnelt.
        /// </summary>
        internal static string IncompatibleNamespaceProperties {
            get {
                return ResourceManager.GetString("IncompatibleNamespaceProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect value &apos;{0}&apos; for attribute &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string IncorrectAttributeValue {
            get {
                return ResourceManager.GetString("IncorrectAttributeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insufficient data. ähnelt.
        /// </summary>
        internal static string InsufficientData {
            get {
                return ResourceManager.GetString("InsufficientData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown &apos;assembly reference&apos; attribute. ähnelt.
        /// </summary>
        internal static string InvalidAssemblyReferenceAttribute {
            get {
                return ResourceManager.GetString("InvalidAssemblyReferenceAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute value of &apos;{1}&apos; element is defined more than once. ähnelt.
        /// </summary>
        internal static string InvalidAttributeDefinedTwice {
            get {
                return ResourceManager.GetString("InvalidAttributeDefinedTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die confidence must be between 0.0 and 1.0, inclusively. ähnelt.
        /// </summary>
        internal static string InvalidConfidence {
            get {
                return ResourceManager.GetString("InvalidConfidence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; exported rule contains direct or indirect reference to a dynamic rule. ähnelt.
        /// </summary>
        internal static string InvalidDynamicExport {
            get {
                return ResourceManager.GetString("InvalidDynamicExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule dynamic value not valid. ähnelt.
        /// </summary>
        internal static string InvalidDynamicSetting {
            get {
                return ResourceManager.GetString("InvalidDynamicSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; element not valid. ähnelt.
        /// </summary>
        internal static string InvalidElement {
            get {
                return ResourceManager.GetString("InvalidElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRGS element cannot be empty &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string InvalidEmptyElement {
            get {
                return ResourceManager.GetString("InvalidEmptyElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; element cannot be empty; {0}=&apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string InvalidEmptyRule {
            get {
                return ResourceManager.GetString("InvalidEmptyRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;example&apos; can only be defined at the beginning of a rule. ähnelt.
        /// </summary>
        internal static string InvalidExampleOrdering {
            get {
                return ResourceManager.GetString("InvalidExampleOrdering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undefined attribute flag set or import/export flags simultaneously set. ähnelt.
        /// </summary>
        internal static string InvalidFlagsSet {
            get {
                return ResourceManager.GetString("InvalidFlagsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;grammar&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidGrammarAttribute {
            get {
                return ResourceManager.GetString("InvalidGrammarAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar mode value not valid ähnelt.
        /// </summary>
        internal static string InvalidGrammarMode {
            get {
                return ResourceManager.GetString("InvalidGrammarMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;lexicon&apos; and &apos;meta&apos;, &apos;metadata&apos; must be defined before &apos;rule&apos;. ähnelt.
        /// </summary>
        internal static string InvalidGrammarOrdering {
            get {
                return ResourceManager.GetString("InvalidGrammarOrdering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule cannot be marked as both Import and TopLevel/Active/Root. ähnelt.
        /// </summary>
        internal static string InvalidImport {
            get {
                return ResourceManager.GetString("InvalidImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown &apos;import namespace&apos; attribute. ähnelt.
        /// </summary>
        internal static string InvalidImportNamespaceAttribute {
            get {
                return ResourceManager.GetString("InvalidImportNamespaceAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;item&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidItemAttribute {
            get {
                return ResourceManager.GetString("InvalidItemAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attribute in &apos;item&apos; not valid; &apos;repeat&apos; expected. ähnelt.
        /// </summary>
        internal static string InvalidItemAttribute2 {
            get {
                return ResourceManager.GetString("InvalidItemAttribute2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;item repeat&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidItemRepeatAttribute {
            get {
                return ResourceManager.GetString("InvalidItemRepeatAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language not valid. ähnelt.
        /// </summary>
        internal static string InvalidLanguage {
            get {
                return ResourceManager.GetString("InvalidLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;Lexicon&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidLexiconAttribute {
            get {
                return ResourceManager.GetString("InvalidLexiconAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; maxRepeat not valid; must be greater than or equal to zero. ähnelt.
        /// </summary>
        internal static string InvalidMaxRepeat {
            get {
                return ResourceManager.GetString("InvalidMaxRepeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;Meta&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidMetaAttribute {
            get {
                return ResourceManager.GetString("InvalidMetaAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid characters in method name &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string InvalidMethodName {
            get {
                return ResourceManager.GetString("InvalidMethodName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; minRepeat not valid; must must be greater than or equal to zero. ähnelt.
        /// </summary>
        internal static string InvalidMinRepeat {
            get {
                return ResourceManager.GetString("InvalidMinRepeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name must be a nonempty string. ähnelt.
        /// </summary>
        internal static string InvalidName {
            get {
                return ResourceManager.GetString("InvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid type for value &apos;{1}&apos; in &apos;tag&apos; &apos;{0}={1}&apos;. The value should be either a boolean, an integer, a float or a double quoted string. ähnelt.
        /// </summary>
        internal static string InvalidNameValueProperty {
            get {
                return ResourceManager.GetString("InvalidNameValueProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; SRGS element cannot have content. ähnelt.
        /// </summary>
        internal static string InvalidNotEmptyElement {
            get {
                return ResourceManager.GetString("InvalidNotEmptyElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;one-of&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidOneOfAttribute {
            get {
                return ResourceManager.GetString("InvalidOneOfAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid phoneme &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string InvalidPhoneme {
            get {
                return ResourceManager.GetString("InvalidPhoneme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Double-quoted string not valid. ähnelt.
        /// </summary>
        internal static string InvalidQuotedString {
            get {
                return ResourceManager.GetString("InvalidQuotedString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; string format not valid. It must contain backslashes or a percent sign. ähnelt.
        /// </summary>
        internal static string InvalidRegistryEntry {
            get {
                return ResourceManager.GetString("InvalidRegistryEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; repeat probability not valid. RepeatProbability must be between 0.0 and 1.0, inclusively. ähnelt.
        /// </summary>
        internal static string InvalidRepeatProbability {
            get {
                return ResourceManager.GetString("InvalidRepeatProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value not valid for &apos;sapi:reqconf&apos; attribute &apos;{0}&apos; in &apos;token&apos;. ähnelt.
        /// </summary>
        internal static string InvalidReqConfAttribute {
            get {
                return ResourceManager.GetString("InvalidReqConfAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;rule&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidRuleAttribute {
            get {
                return ResourceManager.GetString("InvalidRuleAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule ID not valid. ähnelt.
        /// </summary>
        internal static string InvalidRuleId {
            get {
                return ResourceManager.GetString("InvalidRuleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule reference not valid. Must specify &apos;uri&apos; or &apos;special&apos;. ähnelt.
        /// </summary>
        internal static string InvalidRuleRef {
            get {
                return ResourceManager.GetString("InvalidRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;ruleref&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidRulerefAttribute {
            get {
                return ResourceManager.GetString("InvalidRulerefAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule reference not valid. Uri cannot explicitly reference the same grammar file. ähnelt.
        /// </summary>
        internal static string InvalidRuleRefSelf {
            get {
                return ResourceManager.GetString("InvalidRuleRefSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule scope value not valid. ähnelt.
        /// </summary>
        internal static string InvalidRuleScope {
            get {
                return ResourceManager.GetString("InvalidRuleScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Script attribute not valid. ähnelt.
        /// </summary>
        internal static string InvalidScriptAttribute {
            get {
                return ResourceManager.GetString("InvalidScriptAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Script attribute not valid. Unrecognized rule &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string InvalidScriptDefinition {
            get {
                return ResourceManager.GetString("InvalidScriptDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;tag-format&apos; for grammars that include .NET semantics must be &apos;tag-format=&quot;properties-ms/1.0&quot;&apos; ähnelt.
        /// </summary>
        internal static string InvalidSemanticProcessingType {
            get {
                return ResourceManager.GetString("InvalidSemanticProcessingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;{1}&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidSpeakAttribute {
            get {
                return ResourceManager.GetString("InvalidSpeakAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid special ruleref &apos;uri&apos;. Expected: &apos;NULL&apos;, &apos;VOID&apos;, or &apos;GARBAGE&apos;. ähnelt.
        /// </summary>
        internal static string InvalidSpecialRuleRef {
            get {
                return ResourceManager.GetString("InvalidSpecialRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRGS not valid: no &apos;grammar&apos; element found. ähnelt.
        /// </summary>
        internal static string InvalidSrgs {
            get {
                return ResourceManager.GetString("InvalidSrgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SRGS grammar not valid. SRGS namespace is not defined &apos;http://www.w3.org/2001/06/grammar&apos;. ähnelt.
        /// </summary>
        internal static string InvalidSrgsNamespace {
            get {
                return ResourceManager.GetString("InvalidSrgsNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute not valid in &apos;subset&apos;. ähnelt.
        /// </summary>
        internal static string InvalidSubsetAttribute {
            get {
                return ResourceManager.GetString("InvalidSubsetAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;tag&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidTagAttribute {
            get {
                return ResourceManager.GetString("InvalidTagAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tag format not valid. Expected format is: &apos;semantics-ms/1.0&apos; or &apos;properties-ms/1.0&apos;. ähnelt.
        /// </summary>
        internal static string InvalidTagFormat {
            get {
                return ResourceManager.GetString("InvalidTagFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ambiguous construct. An &apos;item&apos; having a repeat count where the minimum and maximum value are different cannot contain only tag elements. ähnelt.
        /// </summary>
        internal static string InvalidTagInAnEmptyItem {
            get {
                return ResourceManager.GetString("InvalidTagInAnEmptyItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content of token tag is not valid. ähnelt.
        /// </summary>
        internal static string InvalidToken {
            get {
                return ResourceManager.GetString("InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; attribute in &apos;token&apos; not valid. ähnelt.
        /// </summary>
        internal static string InvalidTokenAttribute {
            get {
                return ResourceManager.GetString("InvalidTokenAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token ID not valid. ähnelt.
        /// </summary>
        internal static string InvalidTokenId {
            get {
                return ResourceManager.GetString("InvalidTokenId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token string cannot contain double quote character. ähnelt.
        /// </summary>
        internal static string InvalidTokenString {
            get {
                return ResourceManager.GetString("InvalidTokenString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value type not valid; must be of type String, Boolean, Int32, or Double. ähnelt.
        /// </summary>
        internal static string InvalidValueType {
            get {
                return ResourceManager.GetString("InvalidValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version number not valid. Expected &apos;1.0&apos;. ähnelt.
        /// </summary>
        internal static string InvalidVersion {
            get {
                return ResourceManager.GetString("InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;voice&apos; element in &apos;prompt_output&apos; is not valid. ähnelt.
        /// </summary>
        internal static string InvalidVoiceElementInPromptOutput {
            get {
                return ResourceManager.GetString("InvalidVoiceElementInPromptOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; weight not valid; must be greater than 0.0. ähnelt.
        /// </summary>
        internal static string InvalidWeight {
            get {
                return ResourceManager.GetString("InvalidWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XML content not valid. ähnelt.
        /// </summary>
        internal static string InvalidXml {
            get {
                return ResourceManager.GetString("InvalidXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XML grammar format not valid. Cannot load grammar into XML Document Object Model. ähnelt.
        /// </summary>
        internal static string InvalidXmlFormat {
            get {
                return ResourceManager.GetString("InvalidXmlFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;CultureInfo.InvariantCulture&apos; is not a valid value for this operation. ähnelt.
        /// </summary>
        internal static string InvariantCultureInfo {
            get {
                return ResourceManager.GetString("InvariantCultureInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The client is currently synced with the lexicon. ähnelt.
        /// </summary>
        internal static string LexNothingToSync {
            get {
                return ResourceManager.GetString("LexNothingToSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The word being normalized has generated more than the maximum number of allowed normalized results. ähnelt.
        /// </summary>
        internal static string LimitReached {
            get {
                return ResourceManager.GetString("LimitReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line ähnelt.
        /// </summary>
        internal static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only supported on local files with &apos;file:&apos; scheme. ähnelt.
        /// </summary>
        internal static string LocalFilesOnly {
            get {
                return ResourceManager.GetString("LocalFilesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MaxAlternates value must be greater than or equal to zero. ähnelt.
        /// </summary>
        internal static string MaxAlternatesInvalid {
            get {
                return ResourceManager.GetString("MaxAlternatesInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum transition count is reached. Transition count cannot exceed 256. ähnelt.
        /// </summary>
        internal static string MaxTransitionsCount {
            get {
                return ResourceManager.GetString("MaxTransitionsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name and http-equiv attributes cannot be used together in metadata. ähnelt.
        /// </summary>
        internal static string MetaNameHTTPEquiv {
            get {
                return ResourceManager.GetString("MetaNameHTTPEquiv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attribute &apos;method&apos; in &apos;script&apos; defined more than once. ähnelt.
        /// </summary>
        internal static string MethodAttributeDefinedMultipeTimes {
            get {
                return ResourceManager.GetString("MethodAttributeDefinedMultipeTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; method for rule &apos;{1}&apos; must be &apos;public&apos;. The method cannot be invoked. ähnelt.
        /// </summary>
        internal static string MethodNotPublic {
            get {
                return ResourceManager.GetString("MethodNotPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Min&apos; value must be smaller than or equal to &apos;Max&apos; value. ähnelt.
        /// </summary>
        internal static string MinGreaterThanMax {
            get {
                return ResourceManager.GetString("MinGreaterThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeat count out of range. Expect 0 &lt;= min ({0}) &lt;= max ({1}) &lt; 256. ähnelt.
        /// </summary>
        internal static string MinMaxOutOfRange {
            get {
                return ResourceManager.GetString("MinMaxOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{1}&apos; requires attribute &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string MissingRequiredAttribute {
            get {
                return ResourceManager.GetString("MissingRequiredAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing &quot;tag-format&quot; in the &apos;grammar&apos; element. This attribute must be set in SRGS grammars containing &apos;tag&apos; elements. ähnelt.
        /// </summary>
        internal static string MissingTagFormat {
            get {
                return ResourceManager.GetString("MissingTagFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot have multiple &apos;pron&apos; strings. ähnelt.
        /// </summary>
        internal static string MuliplePronunciationString {
            get {
                return ResourceManager.GetString("MuliplePronunciationString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot have multiple &apos;display&apos; strings. ähnelt.
        /// </summary>
        internal static string MultipleDisplayString {
            get {
                return ResourceManager.GetString("MultipleDisplayString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This argument must be greater than zero. ähnelt.
        /// </summary>
        internal static string MustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("MustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Negative TimeSpan values not supported. ähnelt.
        /// </summary>
        internal static string NegativeTimesNotSupported {
            get {
                return ResourceManager.GetString("NegativeTimesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special &apos;ruleref&apos; cannot have &apos;semantic-key&apos; or &apos;params&apos; attributes. ähnelt.
        /// </summary>
        internal static string NoAliasForSpecialRuleRef {
            get {
                return ResourceManager.GetString("NoAliasForSpecialRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No audio data is available. Set the RecognizedAudio property to true on your recognizer to receive audio data. ähnelt.
        /// </summary>
        internal static string NoAudioAvailable {
            get {
                return ResourceManager.GetString("NoAudioAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backslashes not found in the path specified by &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string NoBackSlash {
            get {
                return ResourceManager.GetString("NoBackSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;classname&apos; is undefined. ähnelt.
        /// </summary>
        internal static string NoClassname {
            get {
                return ResourceManager.GetString("NoClassname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is currently no hypothesis recognition available. ähnelt.
        /// </summary>
        internal static string NoHypothesisAvailable {
            get {
                return ResourceManager.GetString("NoHypothesisAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must set &apos;language&apos; attribute for grammars with scripts. ähnelt.
        /// </summary>
        internal static string NoLanguageSet {
            get {
                return ResourceManager.GetString("NoLanguageSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name must be specified. ähnelt.
        /// </summary>
        internal static string NoName {
            get {
                return ResourceManager.GetString("NoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name must be specified &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string NoName1 {
            get {
                return ResourceManager.GetString("NoName1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse path cannot be parsed given the currently active rules. ähnelt.
        /// </summary>
        internal static string NoParseFound {
            get {
                return ResourceManager.GetString("NoParseFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No prompt engine in the system. ähnelt.
        /// </summary>
        internal static string NoPromptEngine {
            get {
                return ResourceManager.GetString("NoPromptEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find prompt engine interface on this object. ähnelt.
        /// </summary>
        internal static string NoPromptEngineInterface {
            get {
                return ResourceManager.GetString("NoPromptEngineInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule without ID in &apos;rule&apos;. ähnelt.
        /// </summary>
        internal static string NoRuleId {
            get {
                return ResourceManager.GetString("NoRuleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No semantic processing defined for the rules. ähnelt.
        /// </summary>
        internal static string NoScriptsForRules {
            get {
                return ResourceManager.GetString("NoScriptsForRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error in SML generation. ähnelt.
        /// </summary>
        internal static string NoSmlData {
            get {
                return ResourceManager.GetString("NoSmlData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No terminating rule path. ähnelt.
        /// </summary>
        internal static string NoTerminatingRulePath {
            get {
                return ResourceManager.GetString("NoTerminatingRulePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token not found. ähnelt.
        /// </summary>
        internal static string NotFound {
            get {
                return ResourceManager.GetString("NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This combination of function call and input is not supported. ähnelt.
        /// </summary>
        internal static string NotSupported {
            get {
                return ResourceManager.GetString("NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not supported on DictationGrammar objects. ähnelt.
        /// </summary>
        internal static string NotSupportedOnDictationGrammars {
            get {
                return ResourceManager.GetString("NotSupportedOnDictationGrammars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This feature is not supported with this version of the speech platform. ähnelt.
        /// </summary>
        internal static string NotSupportedWithThisVersionOfSAPI {
            get {
                return ResourceManager.GetString("NotSupportedWithThisVersionOfSAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; is not supported with this version of the speech platform. ähnelt.
        /// </summary>
        internal static string NotSupportedWithThisVersionOfSAPI2 {
            get {
                return ResourceManager.GetString("NotSupportedWithThisVersionOfSAPI2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;BaseUri&apos; is not supported with this version of the speech platform. ähnelt.
        /// </summary>
        internal static string NotSupportedWithThisVersionOfSAPIBaseUri {
            get {
                return ResourceManager.GetString("NotSupportedWithThisVersionOfSAPIBaseUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This &apos;CompareOption&apos; value is not supported with this version of the speech platform. ähnelt.
        /// </summary>
        internal static string NotSupportedWithThisVersionOfSAPICompareOption {
            get {
                return ResourceManager.GetString("NotSupportedWithThisVersionOfSAPICompareOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This semantic interpretation type &apos;tag-format&apos; is not supported with this version of the speech platform. ähnelt.
        /// </summary>
        internal static string NotSupportedWithThisVersionOfSAPITagFormat {
            get {
                return ResourceManager.GetString("NotSupportedWithThisVersionOfSAPITagFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; file is not a valid audio file or the audio format is not supported. ähnelt.
        /// </summary>
        internal static string NotValidAudioFile {
            get {
                return ResourceManager.GetString("NotValidAudioFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File not a valid audio stream. ähnelt.
        /// </summary>
        internal static string NotValidAudioStream {
            get {
                return ResourceManager.GetString("NotValidAudioStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whole number of blocks not present. ähnelt.
        /// </summary>
        internal static string NotWholeNumberBlocks {
            get {
                return ResourceManager.GetString("NotWholeNumberBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special &apos;ruleref&apos; cannot have a &apos;uri&apos;attribute. ähnelt.
        /// </summary>
        internal static string NoUriForSpecialRuleRef {
            get {
                return ResourceManager.GetString("NoUriForSpecialRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; parameter cannot be null. ähnelt.
        /// </summary>
        internal static string NullParamIllegal {
            get {
                return ResourceManager.GetString("NullParamIllegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of samples in data block not valid. ähnelt.
        /// </summary>
        internal static string NumberOfSamplesInvalid {
            get {
                return ResourceManager.GetString("NumberOfSamplesInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; not valid on private rule &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string OnInitOnPublicRule {
            get {
                return ResourceManager.GetString("OnInitOnPublicRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation stopped. ähnelt.
        /// </summary>
        internal static string OperationAborted {
            get {
                return ResourceManager.GetString("OperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; method cannot have multiple overloads. ähnelt.
        /// </summary>
        internal static string OverloadNotAllowed {
            get {
                return ResourceManager.GetString("OverloadNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable parameter list cannot contain &apos;null&apos; value. ähnelt.
        /// </summary>
        internal static string ParamsEntryNullIllegal {
            get {
                return ResourceManager.GetString("ParamsEntryNullIllegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Position ähnelt.
        /// </summary>
        internal static string Position {
            get {
                return ResourceManager.GetString("Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Async operation canceled. ähnelt.
        /// </summary>
        internal static string PromptAsyncOperationCancelled {
            get {
                return ResourceManager.GetString("PromptAsyncOperationCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Age must be in the range &apos;2&apos; to &apos;100&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderAgeOutOfRange {
            get {
                return ResourceManager.GetString("PromptBuilderAgeOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The path to the database must point to a local or network file. ähnelt.
        /// </summary>
        internal static string PromptBuilderDatabaseName {
            get {
                return ResourceManager.GetString("PromptBuilderDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized attribute in SSML header. ähnelt.
        /// </summary>
        internal static string PromptBuilderInvalidAttribute {
            get {
                return ResourceManager.GetString("PromptBuilderInvalidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Malformed SSML document. &apos;{0}&apos; SSML element is not valid in the context of &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderInvalidElement {
            get {
                return ResourceManager.GetString("PromptBuilderInvalidElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot generate SSML data:  ähnelt.
        /// </summary>
        internal static string PromptBuilderInvalideState {
            get {
                return ResourceManager.GetString("PromptBuilderInvalideState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Voice variant cannot be negative. ähnelt.
        /// </summary>
        internal static string PromptBuilderInvalidVariant {
            get {
                return ResourceManager.GetString("PromptBuilderInvalidVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;EndParagraph&apos; requires matching &apos;StartParagraph&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderMismatchParagraph {
            get {
                return ResourceManager.GetString("PromptBuilderMismatchParagraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;EndSentence&apos; requires matching &apos;StartSentence&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderMismatchSentence {
            get {
                return ResourceManager.GetString("PromptBuilderMismatchSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;EndStyle&apos; requires matching &apos;StartStyle&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderMismatchStyle {
            get {
                return ResourceManager.GetString("PromptBuilderMismatchStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;EndVoice&apos; requires matching &apos;StartVoice&apos;. ähnelt.
        /// </summary>
        internal static string PromptBuilderMismatchVoice {
            get {
                return ResourceManager.GetString("PromptBuilderMismatchVoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot nest paragraph in another paragraph or sentence in SSML document. ähnelt.
        /// </summary>
        internal static string PromptBuilderNestedParagraph {
            get {
                return ResourceManager.GetString("PromptBuilderNestedParagraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot nest sentences in SSML document. ähnelt.
        /// </summary>
        internal static string PromptBuilderNestedSentence {
            get {
                return ResourceManager.GetString("PromptBuilderNestedSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSML data was already generated. ähnelt.
        /// </summary>
        internal static string PromptBuilderStateEnded {
            get {
                return ResourceManager.GetString("PromptBuilderStateEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paragraph not closed. ähnelt.
        /// </summary>
        internal static string PromptBuilderStateParagraph {
            get {
                return ResourceManager.GetString("PromptBuilderStateParagraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sentence not closed. ähnelt.
        /// </summary>
        internal static string PromptBuilderStateSentence {
            get {
                return ResourceManager.GetString("PromptBuilderStateSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Style element not closed. ähnelt.
        /// </summary>
        internal static string PromptBuilderStateStyle {
            get {
                return ResourceManager.GetString("PromptBuilderStateStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Voice element not closed. ähnelt.
        /// </summary>
        internal static string PromptBuilderStateVoice {
            get {
                return ResourceManager.GetString("PromptBuilderStateVoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rate must be from -10 through 10. ähnelt.
        /// </summary>
        internal static string RateOutOfRange {
            get {
                return ResourceManager.GetString("RateOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speech Recognition is not available on this system. SAPI and Speech Recognition engines cannot be found. ähnelt.
        /// </summary>
        internal static string RecognitionNotSupported {
            get {
                return ResourceManager.GetString("RecognitionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speech Recognition not supported on 64-bit versions of Windows XP and Windows Server 2003.  ähnelt.
        /// </summary>
        internal static string RecognitionNotSupportedOn64bit {
            get {
                return ResourceManager.GetString("RecognitionNotSupportedOn64bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot perform this operation while the recognizer is doing recognition. ähnelt.
        /// </summary>
        internal static string RecognizerAlreadyRecognizing {
            get {
                return ResourceManager.GetString("RecognizerAlreadyRecognizing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar file not found. ähnelt.
        /// </summary>
        internal static string RecognizerGrammarNotFound {
            get {
                return ResourceManager.GetString("RecognizerGrammarNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At least one grammar must be loaded before doing a recognition. ähnelt.
        /// </summary>
        internal static string RecognizerHasNoGrammar {
            get {
                return ResourceManager.GetString("RecognizerHasNoGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Binary grammar not valid. ähnelt.
        /// </summary>
        internal static string RecognizerInvalidBinaryGrammar {
            get {
                return ResourceManager.GetString("RecognizerInvalidBinaryGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No audio input is supplied to this recognizer. Use the method SetInputToDefaultAudioDevice if a microphone is connected to the system, otherwise use SetInputToWaveFile, SetInputToWaveStream or SetInputToAudioStream to perform speech recognition from pre-recorded audio. ähnelt.
        /// </summary>
        internal static string RecognizerNoInputSource {
            get {
                return ResourceManager.GetString("RecognizerNoInputSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar has no root rule. You must specify a rule to activate in the grammar constructor. ähnelt.
        /// </summary>
        internal static string RecognizerNoRootRuleToActivate {
            get {
                return ResourceManager.GetString("RecognizerNoRootRuleToActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grammar file &apos;{0}&apos; has no root rule. You must specify a rule to activate in the grammar constructor. ähnelt.
        /// </summary>
        internal static string RecognizerNoRootRuleToActivate1 {
            get {
                return ResourceManager.GetString("RecognizerNoRootRuleToActivate1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recognizer is not enabled. ähnelt.
        /// </summary>
        internal static string RecognizerNotEnabled {
            get {
                return ResourceManager.GetString("RecognizerNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No recognizer of the required ID found. ähnelt.
        /// </summary>
        internal static string RecognizerNotFound {
            get {
                return ResourceManager.GetString("RecognizerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot activate rule in grammar. ähnelt.
        /// </summary>
        internal static string RecognizerRuleActivationFailed {
            get {
                return ResourceManager.GetString("RecognizerRuleActivationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule in grammar file &apos;{1}&apos; not found or not public. ähnelt.
        /// </summary>
        internal static string RecognizerRuleNotFound {
            get {
                return ResourceManager.GetString("RecognizerRuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule not found or not public. ähnelt.
        /// </summary>
        internal static string RecognizerRuleNotFoundStream {
            get {
                return ResourceManager.GetString("RecognizerRuleNotFoundStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error obtaining recognizer setting. ähnelt.
        /// </summary>
        internal static string RecognizerSettingGetError {
            get {
                return ResourceManager.GetString("RecognizerSettingGetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recognizer setting not supported by recognizer. ähnelt.
        /// </summary>
        internal static string RecognizerSettingNotSupported {
            get {
                return ResourceManager.GetString("RecognizerSettingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error updating recognizer setting. ähnelt.
        /// </summary>
        internal static string RecognizerSettingUpdateError {
            get {
                return ResourceManager.GetString("RecognizerSettingUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recognizer Update table too large. ähnelt.
        /// </summary>
        internal static string RecognizerUpdateTableTooLarge {
            get {
                return ResourceManager.GetString("RecognizerUpdateTableTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find grammar referenced by this grammar. ähnelt.
        /// </summary>
        internal static string ReferencedGrammarNotFound {
            get {
                return ResourceManager.GetString("ReferencedGrammarNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RejectionThreshold must be between 0.0 and 1.0. ähnelt.
        /// </summary>
        internal static string RejectionThresholdOutOfRange {
            get {
                return ResourceManager.GetString("RejectionThresholdOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Required Confidence&apos; attribute is not supported for SrgsDocuments. ähnelt.
        /// </summary>
        internal static string ReqConfidenceNotSupported {
            get {
                return ResourceManager.GetString("ReqConfidenceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Speech Recognizer method called with the SPRIF_ASYNC flag is being processed. ähnelt.
        /// </summary>
        internal static string RequestPending {
            get {
                return ResourceManager.GetString("RequestPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ResourceUsage cannot be negative or greater than 100. ähnelt.
        /// </summary>
        internal static string ResourceUsageOutOfRange {
            get {
                return ResourceManager.GetString("ResourceUsageOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serialized format not valid. ähnelt.
        /// </summary>
        internal static string ResultInvalidFormat {
            get {
                return ResourceManager.GetString("ResultInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No grammar available for deserialized result. ähnelt.
        /// </summary>
        internal static string ResultNotGrammarAvailable {
            get {
                return ResourceManager.GetString("ResultNotGrammarAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; root rule is undefined. ähnelt.
        /// </summary>
        internal static string RootNotDefined {
            get {
                return ResourceManager.GetString("RootNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Root rule already defined. ähnelt.
        /// </summary>
        internal static string RootRuleAlreadyDefined {
            get {
                return ResourceManager.GetString("RootRuleAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attribute &apos;rule&apos; in &apos;script&apos;  defined more than once. ähnelt.
        /// </summary>
        internal static string RuleAttributeDefinedMultipeTimes {
            get {
                return ResourceManager.GetString("RuleAttributeDefinedMultipeTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule defined multiple times. ähnelt.
        /// </summary>
        internal static string RuleDefinedMultipleTimes {
            get {
                return ResourceManager.GetString("RuleDefinedMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule defined in more than one file. ähnelt.
        /// </summary>
        internal static string RuleDefinedMultipleTimes2 {
            get {
                return ResourceManager.GetString("RuleDefinedMultipleTimes2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name and ID conflict. ähnelt.
        /// </summary>
        internal static string RuleNameIdConflict {
            get {
                return ResourceManager.GetString("RuleNameIdConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule not defined in this grammar. ähnelt.
        /// </summary>
        internal static string RuleNotDefined {
            get {
                return ResourceManager.GetString("RuleNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule must be marked dynamic. ähnelt.
        /// </summary>
        internal static string RuleNotDynamic {
            get {
                return ResourceManager.GetString("RuleNotDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot have duplicate rule &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string RuleRedefinition {
            get {
                return ResourceManager.GetString("RuleRedefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special RuleRef does not have URI. ähnelt.
        /// </summary>
        internal static string RuleRefNoUri {
            get {
                return ResourceManager.GetString("RuleRefNoUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters not valid for method &apos;{0}&apos; in rule &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string RuleScriptInvalidParameters {
            get {
                return ResourceManager.GetString("RuleScriptInvalidParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return type not valid for method &apos;{0}&apos; in rule &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string RuleScriptInvalidReturnType {
            get {
                return ResourceManager.GetString("RuleScriptInvalidReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; method in rule &apos;{1}&apos; for &apos;{2}&apos; is undefined. ähnelt.
        /// </summary>
        internal static string RuleScriptNotFound {
            get {
                return ResourceManager.GetString("RuleScriptNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A grammar rule was defined with a null path through the rule.  ähnelt.
        /// </summary>
        internal static string SapiErrorAllWordsOptional {
            get {
                return ResourceManager.GetString("SapiErrorAllWordsOptional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object is a stale reference and is invalid to use. ähnelt.
        /// </summary>
        internal static string SapiErrorAlreadyDeleted {
            get {
                return ResourceManager.GetString("SapiErrorAlreadyDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object is already initialized. ähnelt.
        /// </summary>
        internal static string SapiErrorAlreadyInitialized {
            get {
                return ResourceManager.GetString("SapiErrorAlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Speech Recognizer engine is unable to add this word to a grammar. The application may need to supply an explicit pronunciation for this word. ähnelt.
        /// </summary>
        internal static string SapiErrorAlternatesWouldBeInconsistent {
            get {
                return ResourceManager.GetString("SapiErrorAlternatesWouldBeInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot add ambiguous property. ähnelt.
        /// </summary>
        internal static string SapiErrorAmbiguousProperty {
            get {
                return ResourceManager.GetString("SapiErrorAmbiguousProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation is invalid for all but newly created application lexicons. ähnelt.
        /// </summary>
        internal static string SapiErrorAppLexReadOnly {
            get {
                return ResourceManager.GetString("SapiErrorAppLexReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input stream is paused because the Speech Recognizer driver has not retrieved data recently. ähnelt.
        /// </summary>
        internal static string SapiErrorAudioBufferOverflow {
            get {
                return ResourceManager.GetString("SapiErrorAudioBufferOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The real-time audio device stopped returning expected data. ähnelt.
        /// </summary>
        internal static string SapiErrorAudioBufferUnderflow {
            get {
                return ResourceManager.GetString("SapiErrorAudioBufferUnderflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No audio device is installed. ähnelt.
        /// </summary>
        internal static string SapiErrorAudioNotFound {
            get {
                return ResourceManager.GetString("SapiErrorAudioNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream is stopped during read or write call. ähnelt.
        /// </summary>
        internal static string SapiErrorAudioStopped {
            get {
                return ResourceManager.GetString("SapiErrorAudioStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This method is deprecated.  ähnelt.
        /// </summary>
        internal static string SapiErrorAudioStopped0 {
            get {
                return ResourceManager.GetString("SapiErrorAudioStopped0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An audio device stopped returning data from the Read method even though it is in the run state. ähnelt.
        /// </summary>
        internal static string SapiErrorAudioStoppedUnexpectedly {
            get {
                return ResourceManager.GetString("SapiErrorAudioStoppedUnexpectedly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The caller provided a buffer too small to return a result. ähnelt.
        /// </summary>
        internal static string SapiErrorBufferTooSmall {
            get {
                return ResourceManager.GetString("SapiErrorBufferTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The word passed to the normalize interface cannot be normalized. ähnelt.
        /// </summary>
        internal static string SapiErrorCannotNormalize {
            get {
                return ResourceManager.GetString("SapiErrorCannotNormalize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot create a new object instance for the specified object category. ähnelt.
        /// </summary>
        internal static string SapiErrorCantCreate {
            get {
                return ResourceManager.GetString("SapiErrorCantCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Circular reference in import rules of grammars. ähnelt.
        /// </summary>
        internal static string SapiErrorCircularReference {
            get {
                return ResourceManager.GetString("SapiErrorCircularReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule &apos;A&apos; refers to a second rule &apos;B&apos; which, in turn, refers to rule &apos;A&apos;.  ähnelt.
        /// </summary>
        internal static string SapiErrorCircularRuleRef {
            get {
                return ResourceManager.GetString("SapiErrorCircularRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse is valid but could be extendable (internal use only) ähnelt.
        /// </summary>
        internal static string SapiErrorCompleteButExtendable {
            get {
                return ResourceManager.GetString("SapiErrorCompleteButExtendable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This alternate is no longer a valid alternate to the result it was obtained from. ähnelt.
        /// </summary>
        internal static string SapiErrorDeadAlternate {
            get {
                return ResourceManager.GetString("SapiErrorDeadAlternate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wave device is busy. ähnelt.
        /// </summary>
        internal static string SapiErrorDeviceBusy {
            get {
                return ResourceManager.GetString("SapiErrorDeviceBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wave device is not enabled. ähnelt.
        /// </summary>
        internal static string SapiErrorDeviceNotEnabled {
            get {
                return ResourceManager.GetString("SapiErrorDeviceNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wave device is not supported. ähnelt.
        /// </summary>
        internal static string SapiErrorDeviceNotSupported {
            get {
                return ResourceManager.GetString("SapiErrorDeviceNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A resource name was duplicated for a given rule. ähnelt.
        /// </summary>
        internal static string SapiErrorDuplicateResourceName {
            get {
                return ResourceManager.GetString("SapiErrorDuplicateResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicated rule name. ähnelt.
        /// </summary>
        internal static string SapiErrorDuplicateRuleName {
            get {
                return ResourceManager.GetString("SapiErrorDuplicateRuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A none dynamic grammar rule is empty. ähnelt.
        /// </summary>
        internal static string SapiErrorEmptyRule {
            get {
                return ResourceManager.GetString("SapiErrorEmptyRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation has reached the end of the stream. ähnelt.
        /// </summary>
        internal static string SapiErrorEndOfStream {
            get {
                return ResourceManager.GetString("SapiErrorEndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In speech recognition, the current method can not be performed while a grammar rule is active. ähnelt.
        /// </summary>
        internal static string SapiErrorEngineBUSY {
            get {
                return ResourceManager.GetString("SapiErrorEngineBUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arguments or data supplied by the engine are in an invalid format or are inconsistent. ähnelt.
        /// </summary>
        internal static string SapiErrorEngineResponseInvalid {
            get {
                return ResourceManager.GetString("SapiErrorEngineResponseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exported rules cannot refer directly or indirectly to a dynamic rule. ähnelt.
        /// </summary>
        internal static string SapiErrorExportDynamicRule {
            get {
                return ResourceManager.GetString("SapiErrorExportDynamicRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tried and failed to delete an existing file. ähnelt.
        /// </summary>
        internal static string SapiErrorFailedToDeleteFile {
            get {
                return ResourceManager.GetString("SapiErrorFailedToDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file must be Unicode. ähnelt.
        /// </summary>
        internal static string SapiErrorFileMustBeUnicode {
            get {
                return ResourceManager.GetString("SapiErrorFileMustBeUnicode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Caller did not specify a format prior to opening a stream. ähnelt.
        /// </summary>
        internal static string SapiErrorFormatNotSpecified {
            get {
                return ResourceManager.GetString("SapiErrorFormatNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MMSYS error occurred. ähnelt.
        /// </summary>
        internal static string SapiErrorGenericMMSYS {
            get {
                return ResourceManager.GetString("SapiErrorGenericMMSYS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The grammar compiler failed due to an internal state error. ähnelt.
        /// </summary>
        internal static string SapiErrorGrammarCompilerInternalError {
            get {
                return ResourceManager.GetString("SapiErrorGrammarCompilerInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The result does not contain any audio, nor does the portion of the element chain of the result contain any audio. ähnelt.
        /// </summary>
        internal static string SapiErrorHighLowConfidence {
            get {
                return ResourceManager.GetString("SapiErrorHighLowConfidence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SelectEngine called while a recognition context exists, or SetInput called in the shared instance case. ähnelt.
        /// </summary>
        internal static string SapiErrorInstanceChangeInvalid {
            get {
                return ResourceManager.GetString("SapiErrorInstanceChangeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio state passed to SetState() is invalid. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidAudioState {
            get {
                return ResourceManager.GetString("SapiErrorInvalidAudioState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid flags for this operation. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidFlags {
            get {
                return ResourceManager.GetString("SapiErrorInvalidFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The XML format string for this &apos;ruleref&apos; is not valid. It must be a &apos;Guid&apos; or &apos;RefClsId&apos;. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidFormatString {
            get {
                return ResourceManager.GetString("SapiErrorInvalidFormatString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid handle. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidHandle {
            get {
                return ResourceManager.GetString("SapiErrorInvalidHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A rule reference to an imported grammar cannot be resolved. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidImport {
            get {
                return ResourceManager.GetString("SapiErrorInvalidImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phrase ID specified does not exist or is out of range. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidPhraseID {
            get {
                return ResourceManager.GetString("SapiErrorInvalidPhraseID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key specified is invalid. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidRegistrykey {
            get {
                return ResourceManager.GetString("SapiErrorInvalidRegistrykey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The token specified is invalid. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidTokenId {
            get {
                return ResourceManager.GetString("SapiErrorInvalidTokenId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The format of the WAV file is not supported. ähnelt.
        /// </summary>
        internal static string SapiErrorInvalidWAVFile {
            get {
                return ResourceManager.GetString("SapiErrorInvalidWAVFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The language for the grammar does not match the language of the speech recognizer. ähnelt.
        /// </summary>
        internal static string SapiErrorLangIdMismatch {
            get {
                return ResourceManager.GetString("SapiErrorLangIdMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot request all words at once from a container lexicon. ähnelt.
        /// </summary>
        internal static string SapiErrorLexRequiresCookie {
            get {
                return ResourceManager.GetString("SapiErrorLexRequiresCookie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The client is excessively out of sync with the lexicon. Mismatches may not be incrementally synched. ähnelt.
        /// </summary>
        internal static string SapiErrorLexVeryOutOfSync {
            get {
                return ResourceManager.GetString("SapiErrorLexVeryOutOfSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occurred during a call to the marshaling code ähnelt.
        /// </summary>
        internal static string SapiErrorMarshalerException {
            get {
                return ResourceManager.GetString("SapiErrorMarshalerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected voice was registered as multilingual. SAPI does not support multilingual registration.  ähnelt.
        /// </summary>
        internal static string SapiErrorMultilingualNotSupported {
            get {
                return ResourceManager.GetString("SapiErrorMultilingualNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The result does not contain any audio, nor does the portion of the element chain of the result contain any audio. ähnelt.
        /// </summary>
        internal static string SapiErrorNoAudioData {
            get {
                return ResourceManager.GetString("SapiErrorNoAudioData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no wave driver installed. ähnelt.
        /// </summary>
        internal static string SapiErrorNoDriver {
            get {
                return ResourceManager.GetString("SapiErrorNoDriver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When enumerating items, the requested index is greater than the count of items. ähnelt.
        /// </summary>
        internal static string SapiErrorNoMoreItems {
            get {
                return ResourceManager.GetString("SapiErrorNoMoreItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot parse until a rule is active. ähnelt.
        /// </summary>
        internal static string SapiErrorNoRuleActive {
            get {
                return ResourceManager.GetString("SapiErrorNoRuleActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A grammar contains no top-level, dynamic, or exported rules. ähnelt.
        /// </summary>
        internal static string SapiErrorNoRules {
            get {
                return ResourceManager.GetString("SapiErrorNoRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The grammar does not have any root or top-level active rules to activate. ähnelt.
        /// </summary>
        internal static string SapiErrorNoRulesToActivate {
            get {
                return ResourceManager.GetString("SapiErrorNoRulesToActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Audio output and input are not supported for non-active console sessions. ähnelt.
        /// </summary>
        internal static string SapiErrorNotActiveSession {
            get {
                return ResourceManager.GetString("SapiErrorNotActiveSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempt was made to manipulate a non-dynamic grammar. ähnelt.
        /// </summary>
        internal static string SapiErrorNotDynamicGrammar {
            get {
                return ResourceManager.GetString("SapiErrorNotDynamicGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Terminating rule path is missing. ähnelt.
        /// </summary>
        internal static string SapiErrorNoTerminatingRulePath {
            get {
                return ResourceManager.GetString("SapiErrorNoTerminatingRulePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the requested data item, such as a data key or value. ähnelt.
        /// </summary>
        internal static string SapiErrorNotFound {
            get {
                return ResourceManager.GetString("SapiErrorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The word does not exist in the lexicon. ähnelt.
        /// </summary>
        internal static string SapiErrorNotInLex {
            get {
                return ResourceManager.GetString("SapiErrorNotInLex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current voice is not a prompt voice. ähnelt.
        /// </summary>
        internal static string SapiErrorNotPromptVoice {
            get {
                return ResourceManager.GetString("SapiErrorNotPromptVoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method called is not supported for the in-process recognizer. ähnelt.
        /// </summary>
        internal static string SapiErrorNotSupportedForInprocRecognizer {
            get {
                return ResourceManager.GetString("SapiErrorNotSupportedForInprocRecognizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported format. ähnelt.
        /// </summary>
        internal static string SapiErrorNotSupportedFormat {
            get {
                return ResourceManager.GetString("SapiErrorNotSupportedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method called is not supported for the shared recognizer. ähnelt.
        /// </summary>
        internal static string SapiErrorNotSupportedForSharedRecognizer {
            get {
                return ResourceManager.GetString("SapiErrorNotSupportedForSharedRecognizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The requested language is not supported. ähnelt.
        /// </summary>
        internal static string SapiErrorNotSupportedLang {
            get {
                return ResourceManager.GetString("SapiErrorNotSupportedLang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown phoneme. ähnelt.
        /// </summary>
        internal static string SapiErrorNotSupportedPhoneme {
            get {
                return ResourceManager.GetString("SapiErrorNotSupportedPhoneme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only a top-level rule can be activated or deactivated. ähnelt.
        /// </summary>
        internal static string SapiErrorNotTopLevelRule {
            get {
                return ResourceManager.GetString("SapiErrorNotTopLevelRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word must contain a vowel. ähnelt.
        /// </summary>
        internal static string SapiErrorNoVowel {
            get {
                return ResourceManager.GetString("SapiErrorNoVowel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The engine does not need SAPI word entry handles for this grammar. ähnelt.
        /// </summary>
        internal static string SapiErrorNoWordEntryNotification {
            get {
                return ResourceManager.GetString("SapiErrorNoWordEntryNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Speech Recognizer engine is unable to add this word to a grammar. The application may need to supply an explicit pronunciation for this word. ähnelt.
        /// </summary>
        internal static string SapiErrorNoWordPronunciation {
            get {
                return ResourceManager.GetString("SapiErrorNoWordPronunciation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A grammar-ending parse does not use all available words. ähnelt.
        /// </summary>
        internal static string SapiErrorPartialParseFound {
            get {
                return ResourceManager.GetString("SapiErrorPartialParseFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot convert the phonemes to the specified phonetic alphabet. ähnelt.
        /// </summary>
        internal static string SapiErrorPhonemeConversion {
            get {
                return ResourceManager.GetString("SapiErrorPhonemeConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation could not be completed because the recognizer is inactive. ähnelt.
        /// </summary>
        internal static string SapiErrorRecognizerInactive {
            get {
                return ResourceManager.GetString("SapiErrorRecognizerInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No recognizer is installed.  ähnelt.
        /// </summary>
        internal static string SapiErrorRecognizerNotFound {
            get {
                return ResourceManager.GetString("SapiErrorRecognizerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Recognition Parse Tree couldn&apos;t be generated. ähnelt.
        /// </summary>
        internal static string SapiErrorRecoXMLGenerationFail {
            get {
                return ResourceManager.GetString("SapiErrorRecoXMLGenerationFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Speech Recognizer engine called synchronize while inside of a synchronize call. ähnelt.
        /// </summary>
        internal static string SapiErrorReenterSynchronize {
            get {
                return ResourceManager.GetString("SapiErrorReenterSynchronize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote call to the server was made on the wrong thread. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteCallOnWrongThread {
            get {
                return ResourceManager.GetString("SapiErrorRemoteCallOnWrongThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A marshaled remote call failed to respond. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteCallTimedout {
            get {
                return ResourceManager.GetString("SapiErrorRemoteCallTimedout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A timeout occurred obtaining the lock for starting or connecting to SAPI Server. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteCallTimedOutConnect {
            get {
                return ResourceManager.GetString("SapiErrorRemoteCallTimedOutConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A timeout occurred starting the SAPI Server. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteCallTimedOutStart {
            get {
                return ResourceManager.GetString("SapiErrorRemoteCallTimedOutStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The remote process is already running; it cannot be started a second time. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteProcessAlreadyRunning {
            get {
                return ResourceManager.GetString("SapiErrorRemoteProcessAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The remote process terminated unexpectedly. ähnelt.
        /// </summary>
        internal static string SapiErrorRemoteProcessTerminated {
            get {
                return ResourceManager.GetString("SapiErrorRemoteProcessTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is already a root rule for this grammar. ähnelt.
        /// </summary>
        internal static string SapiErrorRootRuleAlreadyDefined {
            get {
                return ResourceManager.GetString("SapiErrorRootRuleAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A rule exists with matching IDs (names) but different names (IDs).  ähnelt.
        /// </summary>
        internal static string SapiErrorRuleNameIdConflict {
            get {
                return ResourceManager.GetString("SapiErrorRuleNameIdConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An attempt was made to modify a non-dynamic rule. ähnelt.
        /// </summary>
        internal static string SapiErrorRuleNotDynamic {
            get {
                return ResourceManager.GetString("SapiErrorRuleNotDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule not found in grammar &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string SapiErrorRuleNotFound {
            get {
                return ResourceManager.GetString("SapiErrorRuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rule &apos;{0}&apos; not found in grammar &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string SapiErrorRuleNotFound2 {
            get {
                return ResourceManager.GetString("SapiErrorRuleNotFound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Support for embedded script not supported because browser security settings have disabled it. ähnelt.
        /// </summary>
        internal static string SapiErrorScriptDisallowed {
            get {
                return ResourceManager.GetString("SapiErrorScriptDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The security manager cannot be changed while a grammar is loaded. ähnelt.
        /// </summary>
        internal static string SapiErrorSecMgrChangeNotAllowed {
            get {
                return ResourceManager.GetString("SapiErrorSecMgrChangeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The user has chosen to disable speech from running on the machine, or the system is not set up to run speech. ähnelt.
        /// </summary>
        internal static string SapiErrorSharedEngineDisabled {
            get {
                return ResourceManager.GetString("SapiErrorSharedEngineDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Semantic Markup Language cannot be generated. This may be caused by an XLST template that is not formed correctly. ähnelt.
        /// </summary>
        internal static string SapiErrorSMLGenerationFail {
            get {
                return ResourceManager.GetString("SapiErrorSMLGenerationFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error during a call to the current Speech Recognizer engine. ähnelt.
        /// </summary>
        internal static string SapiErrorSREngineException {
            get {
                return ResourceManager.GetString("SapiErrorSREngineException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The grammar contains a node that does not have arcs. ähnelt.
        /// </summary>
        internal static string SapiErrorStateWithNoArcs {
            get {
                return ResourceManager.GetString("SapiErrorStateWithNoArcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error parsing the SAPI Text Grammar Format (XML grammar). ähnelt.
        /// </summary>
        internal static string SapiErrorSTGF {
            get {
                return ResourceManager.GetString("SapiErrorSTGF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot perform operation on a closed stream object. ähnelt.
        /// </summary>
        internal static string SapiErrorStreamClosed {
            get {
                return ResourceManager.GetString("SapiErrorStreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Methods associated with active audio stream cannot be called unless stream is active. ähnelt.
        /// </summary>
        internal static string SapiErrorStreamNotActive {
            get {
                return ResourceManager.GetString("SapiErrorStreamNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream position information supplied from engine is inconsistent. ähnelt.
        /// </summary>
        internal static string SapiErrorStreamPosInvalid {
            get {
                return ResourceManager.GetString("SapiErrorStreamPosInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The local recognizer cannot activate a rule, dictation, or other stream until it is initialized. Call SetInput first. ähnelt.
        /// </summary>
        internal static string SapiErrorStreamUninitialized {
            get {
                return ResourceManager.GetString("SapiErrorStreamUninitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A task could not complete because the Speech Recognizer engine had timed out. ähnelt.
        /// </summary>
        internal static string SapiErrorTimeOut {
            get {
                return ResourceManager.GetString("SapiErrorTimeOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot perform action on this object because its associated registry key was deleted. ähnelt.
        /// </summary>
        internal static string SapiErrorTokenDeleted {
            get {
                return ResourceManager.GetString("SapiErrorTokenDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempted to remove registry data from a token that is already in use elsewhere. ähnelt.
        /// </summary>
        internal static string SapiErrorTokenInUse {
            get {
                return ResourceManager.GetString("SapiErrorTokenInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many grammars have been loaded. Number of grammars cannot exceed 1024. ähnelt.
        /// </summary>
        internal static string SapiErrorTooManyGrammars {
            get {
                return ResourceManager.GetString("SapiErrorTooManyGrammars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This topic cannot be modified. ähnelt.
        /// </summary>
        internal static string SapiErrorTopicNotADaptable {
            get {
                return ResourceManager.GetString("SapiErrorTopicNotADaptable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An exception was raised during a call to the current TTS driver. ähnelt.
        /// </summary>
        internal static string SapiErrorTTSEngineException {
            get {
                return ResourceManager.GetString("SapiErrorTTSEngineException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An exception was raised during a call to an application sentence filter. ähnelt.
        /// </summary>
        internal static string SapiErrorTTSNLPException {
            get {
                return ResourceManager.GetString("SapiErrorTTSNLPException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A rule reference in a grammar was made to a named rule that was never defined. ähnelt.
        /// </summary>
        internal static string SapiErrorUndefinedForwardRuleRef {
            get {
                return ResourceManager.GetString("SapiErrorUndefinedForwardRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object is not initialized. ähnelt.
        /// </summary>
        internal static string SapiErrorUninitialized {
            get {
                return ResourceManager.GetString("SapiErrorUninitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused0 {
            get {
                return ResourceManager.GetString("SapiErrorUnused0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused1 {
            get {
                return ResourceManager.GetString("SapiErrorUnused1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused2 {
            get {
                return ResourceManager.GetString("SapiErrorUnused2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused3 {
            get {
                return ResourceManager.GetString("SapiErrorUnused3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused4 {
            get {
                return ResourceManager.GetString("SapiErrorUnused4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused5 {
            get {
                return ResourceManager.GetString("SapiErrorUnused5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code not used. ähnelt.
        /// </summary>
        internal static string SapiErrorUnused6 {
            get {
                return ResourceManager.GetString("SapiErrorUnused6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation cannot be performed because the voice is currently paused. ähnelt.
        /// </summary>
        internal static string SapiErrorVoicePaused {
            get {
                return ResourceManager.GetString("SapiErrorVoicePaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrect word format, probably due to incorrect pronunciation string. ähnelt.
        /// </summary>
        internal static string SapiErrorWordFormat {
            get {
                return ResourceManager.GetString("SapiErrorWordFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must normalize word before passing to the GetPronunciations interface. ähnelt.
        /// </summary>
        internal static string SapiErrorWordNeedsNormalization {
            get {
                return ResourceManager.GetString("SapiErrorWordNeedsNormalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The XML parser failed due to bad syntax. ähnelt.
        /// </summary>
        internal static string SapiErrorXMLBadSyntax {
            get {
                return ResourceManager.GetString("SapiErrorXMLBadSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The XML parser cannot find a required resource, such as a voice or a phonetic converter. ähnelt.
        /// </summary>
        internal static string SapiErrorXMLResourceNotFound {
            get {
                return ResourceManager.GetString("SapiErrorXMLResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;SrgsNameValueTag&apos; and &apos;SrgsSemanticInterpretationTag&apos; cannot be used together in an Srgs Document. ähnelt.
        /// </summary>
        internal static string SapiPropertiesAndSemantics {
            get {
                return ResourceManager.GetString("SapiPropertiesAndSemantics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seeking not supported on this Stream at this point. ähnelt.
        /// </summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation is not supported for stream input. ähnelt.
        /// </summary>
        internal static string SPNotSupportedOnStreamInput {
            get {
                return ResourceManager.GetString("SPNotSupportedOnStreamInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal Compiler Error, State has no transition. ähnelt.
        /// </summary>
        internal static string StateWithNoArcs {
            get {
                return ResourceManager.GetString("StateWithNoArcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream ended unexpectedly. ähnelt.
        /// </summary>
        internal static string StreamEndedUnexpectedly {
            get {
                return ResourceManager.GetString("StreamEndedUnexpectedly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream must support read operation. ähnelt.
        /// </summary>
        internal static string StreamMustBeReadable {
            get {
                return ResourceManager.GetString("StreamMustBeReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream must support seek operation. ähnelt.
        /// </summary>
        internal static string StreamMustBeSeekable {
            get {
                return ResourceManager.GetString("StreamMustBeSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream must support write operation. ähnelt.
        /// </summary>
        internal static string StreamMustBeWriteable {
            get {
                return ResourceManager.GetString("StreamMustBeWriteable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; cannot be an empty string. ähnelt.
        /// </summary>
        internal static string StringCanNotBeEmpty {
            get {
                return ResourceManager.GetString("StringCanNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom grammars must derive from Grammar class. ähnelt.
        /// </summary>
        internal static string StrongTypedGrammarNotAGrammar {
            get {
                return ResourceManager.GetString("StrongTypedGrammarNotAGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Media type not valid. ähnelt.
        /// </summary>
        internal static string SynthesizerInvalidMediaType {
            get {
                return ResourceManager.GetString("SynthesizerInvalidMediaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wave file not valid. ähnelt.
        /// </summary>
        internal static string SynthesizerInvalidWaveFile {
            get {
                return ResourceManager.GetString("SynthesizerInvalidWaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Culture must be provided. ähnelt.
        /// </summary>
        internal static string SynthesizerNoCulture {
            get {
                return ResourceManager.GetString("SynthesizerNoCulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot find the Culture for a voice. ähnelt.
        /// </summary>
        internal static string SynthesizerNoCulture2 {
            get {
                return ResourceManager.GetString("SynthesizerNoCulture2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SSML input not valid; cannot find &apos;speak&apos; element. ähnelt.
        /// </summary>
        internal static string SynthesizerNoSpeak {
            get {
                return ResourceManager.GetString("SynthesizerNoSpeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synthesizer is not in &apos;Paused&apos; mode. ähnelt.
        /// </summary>
        internal static string SynthesizerPauseResumeMismatched {
            get {
                return ResourceManager.GetString("SynthesizerPauseResumeMismatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This prompt is already in use on a synthesizer or is being reused.  ähnelt.
        /// </summary>
        internal static string SynthesizerPromptInUse {
            get {
                return ResourceManager.GetString("SynthesizerPromptInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot change synthesizer&apos;s output while speaking. ähnelt.
        /// </summary>
        internal static string SynthesizerSetOutputSpeaking {
            get {
                return ResourceManager.GetString("SynthesizerSetOutputSpeaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot set voice. No matching voice is installed or the voice was disabled. ähnelt.
        /// </summary>
        internal static string SynthesizerSetVoiceNoMatch {
            get {
                return ResourceManager.GetString("SynthesizerSetVoiceNoMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speak error &apos;{0:x}&apos;. ähnelt.
        /// </summary>
        internal static string SynthesizerSpeakError {
            get {
                return ResourceManager.GetString("SynthesizerSpeakError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The speech output device cannot be changed when the synthesizer is paused. ähnelt.
        /// </summary>
        internal static string SynthesizerSyncSetOutputWhilePaused {
            get {
                return ResourceManager.GetString("SynthesizerSyncSetOutputWhilePaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot perform synchronous &apos;Speak&apos; operation while synthesizer is paused. ähnelt.
        /// </summary>
        internal static string SynthesizerSyncSpeakWhilePaused {
            get {
                return ResourceManager.GetString("SynthesizerSyncSpeakWhilePaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized Event. ähnelt.
        /// </summary>
        internal static string SynthesizerUnknownEvent {
            get {
                return ResourceManager.GetString("SynthesizerUnknownEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized media type. ähnelt.
        /// </summary>
        internal static string SynthesizerUnknownMediaType {
            get {
                return ResourceManager.GetString("SynthesizerUnknownMediaType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized Priority. ähnelt.
        /// </summary>
        internal static string SynthesizerUnknownPriority {
            get {
                return ResourceManager.GetString("SynthesizerUnknownPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No voice installed on the system or none available with the current security setting. ähnelt.
        /// </summary>
        internal static string SynthesizerVoiceFailed {
            get {
                return ResourceManager.GetString("SynthesizerVoiceFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TagFormat must be specified before adding SrgsTag elements to SrgsDocument. ähnelt.
        /// </summary>
        internal static string TagFormatNotSet {
            get {
                return ResourceManager.GetString("TagFormatNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to create an instance for the CLSID associated with this token. ähnelt.
        /// </summary>
        internal static string TokenCannotCreateInstance {
            get {
                return ResourceManager.GetString("TokenCannotCreateInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token deleted. ähnelt.
        /// </summary>
        internal static string TokenDeleted {
            get {
                return ResourceManager.GetString("TokenDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token in use.	 ähnelt.
        /// </summary>
        internal static string TokenInUse {
            get {
                return ResourceManager.GetString("TokenInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token uninitialized. ähnelt.
        /// </summary>
        internal static string TokenUninitialized {
            get {
                return ResourceManager.GetString("TokenUninitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Too many arcs. Maximum is 0x3FFFFF. ähnelt.
        /// </summary>
        internal static string TooManyArcs {
            get {
                return ResourceManager.GetString("TooManyArcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exceeded symbols tables capacity. ähnelt.
        /// </summary>
        internal static string TooManyRulesWithSemanticsGlobals {
            get {
                return ResourceManager.GetString("TooManyRulesWithSemanticsGlobals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional exception information unavailable. ähnelt.
        /// </summary>
        internal static string Unavailable {
            get {
                return ResourceManager.GetString("Unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must set property value before it can be read. ähnelt.
        /// </summary>
        internal static string UnavailableProperty {
            get {
                return ResourceManager.GetString("UnavailableProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; rule reference not defined in this grammar. ähnelt.
        /// </summary>
        internal static string UndefRuleRef {
            get {
                return ResourceManager.GetString("UndefRuleRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected error &apos;{0:x}&apos;. ähnelt.
        /// </summary>
        internal static string UnexpectedError {
            get {
                return ResourceManager.GetString("UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unhandled &apos;VARIANT&apos; type. ähnelt.
        /// </summary>
        internal static string UnhandledVariant {
            get {
                return ResourceManager.GetString("UnhandledVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unrecognized element &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string UnknownElement {
            get {
                return ResourceManager.GetString("UnknownElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown &apos;MIME&apos; format. ähnelt.
        /// </summary>
        internal static string UnknownMimeFormat {
            get {
                return ResourceManager.GetString("UnknownMimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; alphabet in &apos;phoneme&apos; is not supported. ähnelt.
        /// </summary>
        internal static string UnsupportedAlphabet {
            get {
                return ResourceManager.GetString("UnsupportedAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported Grammar Format. ähnelt.
        /// </summary>
        internal static string UnsupportedFormat {
            get {
                return ResourceManager.GetString("UnsupportedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported language &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string UnsupportedLanguage {
            get {
                return ResourceManager.GetString("UnsupportedLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;lexicon&apos; element is not supported. ähnelt.
        /// </summary>
        internal static string UnsupportedLexicon {
            get {
                return ResourceManager.GetString("UnsupportedLexicon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported phonetic alphabet &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string UnsupportedPhoneticAlphabet {
            get {
                return ResourceManager.GetString("UnsupportedPhoneticAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The word exists but without pronunciation. ähnelt.
        /// </summary>
        internal static string WordExistsWithoutPronunciation {
            get {
                return ResourceManager.GetString("WordExistsWithoutPronunciation", resourceCulture);
            }
        }
    }
}
